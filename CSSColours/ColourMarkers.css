h1 {
    text-align: center;
    /* The CSS rgb function accepts values, or arguments, for red, green, and blue, and produces a color:*/
    /* Each red, green, and blue value is a number from 0 to 255. 0 means that there's 0% of that color, and is black.
    255 means that there's 100% of that color.*/
    /* background-color: rgb(0, 255, 255); */
}
.marker {
    height: 25px;
    width: 200px;
    margin: auto auto 10px;
}
.red {
    /* A gradient is when one color transitions into another.
    The CSS linear-gradient function lets you control the direction of the transition along a line,
    and which colors are used.
    The linear-gradient function actually creates an image element, and is usually paired with the background property
    which can accept an image as a value.*/

    /* linear-gradient(gradientDirection, color1, color2, ...); */
    background: linear-gradient(180deg, rgb(122, 74, 14) 0%, rgb(245, 62, 113) 50%, rgb(162, 27, 27) 100%);
    /* 75% means colour-stops work */
    /* background: linear-gradient(90deg, rgb(255, 0, 0)0%, rgb(0, 255, 0)50%, rgb(0, 0, 255)100%); */

    /* box-shadow: offsetX offsetY color; */
    /* a positive offsetX value moves the shadow right and a negative value moves it left
    a positive offsetY value moves the shadow down and a negative value moves it up. */
    box-shadow: 5px 5px red;

    /*  box-shadow: 0 0 20px 0 rgba(83, 14, 14, 0.8); */

}
/* Hex color values start with a # character and take six characters from 0-9 and A-F.
The first pair of characters represent red, the second pair represent green, and the third pair represent blue.
e.g., #4B5320.*/
.green {
    /* There are three more tertiary colors: chartreuse green (green + yellow),
    azure (blue + cyan), and rose (red + magenta).*/
    background: linear-gradient(180deg, #55680D, #71F53E, #116C31);

    /* box-shadow: offsetX offsetY blurRadius color; */
    /* The higher the value of blurRadius, the greater the blurring effect is. */
    box-shadow: 5px 5px 5px green;
    /* box-shadow: 0 0 20px 0 #3B7E20CC; */
}
/* With hex colors, 00 is 0% of that color, and FF is 100%.
So #00FF00 translates to 0% red, 100% green, and 0% blue, and is the same as rgb(0, 255, 0).*/

/*  The HSL color model, or hue, saturation, and lightness, is another way to represent colors.
The CSS hsl function accepts 3 values: a number from 0 to 360 for hue, a percentage from 0 to 100 for saturation,
and a percentage from 0 to 100 for lightness.

If you imagine a color wheel, the hue red is at 0 degrees, green is at 120 degrees, and blue is at 240 degrees.

Saturation is the intensity of a color from 0%, or gray, to 100% for pure color. You must add the percent sign %
to the saturation and lightness values.

Lightness is how bright a color appears, from 0%, or complete black, to 100%, complete white, with 50% being neutral.*/
.blue {
     background: linear-gradient(hsl(186, 76%, 16%), hsl(223, 90%, 60%),hsl(240, 56%, 42%));
    /* background: hsl(240, 100%, 50%); */

    box-shadow: 5px 5px 5px blue;
    /* box-shadow: offsetX offsetY blurRadius spreadRadius color; */
    /* spreadRadius --> expand the shadow out further*/
    /* box-shadow: 0 0 20px 0 hsla(223, 59%, 31%, 0.8); */

}
.container {
    background-color: rgb(255, 255, 255);
    padding: 10px 0;
}
.sleeve {
    width: 110px;
    height: 25px;
    /* Similar to the opacity property, the alpha channel controls how transparent or opaque a color is.
    e.g. rgba(redValue, greenValue, blueValue, alphaValue);*/
    background-color: rgba(255, 255, 255, 50%);

    /* Opacity describes how opaque, or non-transparent, something is.
    With the value 0, or 0%, the element will be completely transparent,
    and at 1.0, or 100%, the element will be completely opaque like it is by default.
    Another way to set the opacity for an element is with the alpha channel. */
    opacity: 0.5;
    /* border-left-width: 10px; */

    /* If no color is set, black is used by default.*/
    /* border-left-style: solid; */
    /* border-left-color: black; */
    /* The border-left shorthand property lets you to set the left border's width, style, and color at the same time.
    e.g. border-left: width style color;*/
    /* border-left: 10px solid black */
     border-left: 10px double rgba(0, 0, 0, 75%);
}
.cap {
    width: 60px;
    height: 25px;
}

/* new cap div is taking up the entire width of the marker, and is pushing the sleeve down to the next line.
To position two div elements on the same line, set their display properties to inline-block. */
.cap, .sleeve{
    display: inline-block;
}