/* variables are often declared in the :root selector. This is the highest level selector in CSS;
putting your variables there will make them usable everywhere. */
:root {
    /* Variable declarations begin with two dashes (-) and
    are given a name and a value like this: --variable-name: value; */
    --building-colour1: #aa80ff;
    --building-colour2: #66cc99;
    --building-colour3: #cc6699;
    --building-colour4: #538cc6;
    --window-colour1: #bb99ff;
    --window-colour2: #8cd9b3;
    --window-colour3: #d98cb3;
    --window-colour4: #8cb3d9;
}
* {

    box-sizing: border-box;
}
body {
    height: 100vh;
    margin: 0;
    overflow: hidden;
}
.sky {

}
.background-buildings, .foreground-buildings {
    width: 100%;
    height: 100%;
    position: absolute;
    top: 0;
    display: flex;
    align-items: flex-end;
    justify-content: space-evenly;
}
.building-wrap {
    display: flex;
    flex-direction: column;
    align-items: center;
}
.window-wrap {
    display: flex;
    align-items: center;
    justify-content: space-evenly;
}
/* BACKGROUND BUILDINGS - "bb" stands for "background building". */
.bb1 {
    width: 10%;
    height: 70%;
}
.bb1a {
    width: 70%;
   /* background-color: var(--building-colour1);*/
}
.bb1-window {
    height: 10%;
    /* To use a variable, put the variable name in parentheses
    with var in front of them like this: var(--variable-name). */

    background: linear-gradient(var(--building-colour1), var(--window-colour1));

}
.bb1b {
    width: 80%;
    /* height: 10%;
    background-color: var(--building-colour1); */
}
.bb1c {
    width: 90%;
   /* height: 10%;
    background-color: var(--building-colour1); */
}
.bb1d {
    width: 100%;
    height: 70%;
    background: linear-gradient(orange,var(--building-colour1) 50%, var(--window-colour1));
}
.bb2 {
    width: 10%;
    height: 50%;
    /* green is the fallback value
    background-color: var(--building-colour2, green); */
}
.bb2a {

    border-bottom: 5vh solid var(--building-colour2);
    border-left: 5vw solid transparent;
    border-right: 5vw solid transparent;
}
.bb2b {
    width: 100%;
    height: 100%;
    /* Gradient transitions often gradually change from one color to another.
    When a more abrupt change is required, the transition can be made with a hard stop like this:
    linear-gradient(
    var(--first-color) 0%,
    var(--first-color) 40%,
    var(--second-color) 40%,
    var(--second-color) 80%
        ); */
    /* repeating-linear-gradient will make the four colors of your gradient repeat until it gets to
    the bottom of the element; giving you some stripes,
    and saving you from having to add a bunch of elements to create them. */
    background: repeating-linear-gradient(
            var(--building-colour2) 0%,
            var(--building-colour2) 6%,
            var(--window-colour2) 6%,
            var(--window-colour2) 9%);
}
.bb3{
    width: 10%;
    height: 55%;
    /* gradient-type(
    direction,
    color1,
    color2
        );
 When you don't specify a distance for a color, it will use the values that makes sense.
 In this case, the first two colors will default to 0% and 7.5% because it starts at 0%, and 7.5% is half of the 15%,
 so you do not need to set them.*/
    background: repeating-linear-gradient(
            90deg, var(--building-colour3),
            var(--building-colour3),
            var(--window-colour3) 15%);
}

.bb4 {
    width: 11%;
    height: 58%;

}
.bb4-window {
    width: 18%;
    height: 90%;
    background-color: var(--window-colour4);
}
.bb4a {
    width: 3%;
    height: 10%;
    background-color: var(--building-colour4);
}
.bb4b {
    width: 80%;
    height: 5%;
    background-color: var(--building-colour4);
}
.bb4c {
    width: 100%;
    height: 85%;
    background-color: var(--building-colour4);
}

/* FOREGROUND BUILDINGS - "fb" stands for "foreground building */
.fb1 {
    width: 10%;
    height: 60%;

}
.fb1a {
    /* This will put a 7vh height border on the bottom. */
    border-bottom: 7vh solid var(--building-colour4);
    border-left: 2vw solid transparent;
    border-right: 2vw solid transparent;
}
.fb1b {
    width: 60%;
    height: 10%;
    background-color: var(--building-colour4);
}
.fb1c {
    width: 100%;
    height: 80%;
    background:
    /* You can add multiple gradients to an element by separating them with a comma (,) like this:
    gradient1(
        colors
    ),
    gradient2(
        colors
    );*/
            repeating-linear-gradient(
            90deg, var(--building-colour4) 0%,
            var(--building-colour4)10%,
            transparent 10%, transparent 15%),

            repeating-linear-gradient(
            var(--building-colour4) 0%,
            var(--building-colour4) 10%,
            var(--window-colour4) 10%,
            var(--window-colour4) 90%);
}
.fb2 {
    width: 10%;
    height: 40%;

}
.fb2-window {
    width: 22%;
    height: 100%;
    background-color: var(--window-colour3);
}
.fb2a {
    width: 100%;
    /* create a trapezoid shape. */
    border-bottom: 10vh solid var(--building-colour3);
    border-left: 1vw solid transparent;
    border-right: 1vw solid transparent;
}
.fb2b {
    width: 100%;
    height: 75%;
    background-color: var(--building-colour3);
}
.fb3 {
    width: 10%;
    height: 35%;
}
.fb3-window {
    width: 25%;
    height: 80%;
    background-color: var(--window-colour1);
}
.fb3a {
    width: 80%;
    height: 15%;
    background-color: var(--building-colour1);
}
.fb3b {
    width: 100%;
    height: 35%;
    background-color: var(--building-colour1);
}
.fb4 {
    width: 8%;
    height: 45%;
    position: relative;
    left: 10%;
}
.fb4-window {
    width: 30%;
    height: 10%;
    border-radius: 50%;
    margin: 10%;
    background-color: var(--window-colour1);

}
.fb4a {
    border-top: 5vh solid transparent;
    border-left: 8vw solid var(--building-colour1);
}
.fb4b {
    width: 100%;
    height: 89%;
    background-color: var(--building-colour1);
    display: flex;
    flex-wrap: wrap;
}

.fb5 {
    width: 10%;
    height: 33%;
    background: repeating-linear-gradient(
            var(--building-colour2) 0%,
            var(--building-colour2) 5%,
            transparent 5%,
            transparent 10%),
            repeating-linear-gradient( 90deg,
            var(--building-colour2) 0%,
            var(--building-colour2) 12%,
            var(--window-colour2) 12%,
            var(--window-colour2) 44%);
    position: relative;
    right: 10%;
}
.fb6{
    width: 9%;
    height: 38%;
    background: repeating-linear-gradient(90deg,
                var(--building-colour3) 0%,
                var(--building-colour3) 10%,
                transparent 10%,
                transparent 30%),
                repeating-linear-gradient(
                var(--building-colour3) 0%,
                var(--building-colour3) 10%,
                var(--window-colour3) 10%,
                var(--window-colour3) 30%);
}
/* A media query can be used to change styles based on certain conditions, and they look like this:
@media (condition) {

} */
@media (max-width: 1000px) {
    /* circle closest-corner at 15% 15%, this will move the start of the gradient to 15% from the top and left.
    It will make it end at the closest-corner and it will maintain a circle shape. */
    .sky {background: radial-gradient(
            circle closest-corner at 15% 15%,
            #ccc 0%, #ccc 20%, #445 21%, #223 100%);}
    
}