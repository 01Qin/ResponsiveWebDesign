.wheel {
    border: 2px solid black;
    border-radius: 50%;
    margin-left: 50px;
    position: absolute;
    width: 55vw;
    height: 55vw;
    max-width: 500px;
    max-height: 500px;
    /* The animation-name property is used to link a @keyframes rule to a CSS selector. The value of this property
    should match the name of the @keyframes rule. */
    animation-name: wheel;
    /* The animation-duration property is used to set how long the animation should sequence to complete. The time
    should be specified in either seconds (s) or milliseconds (ms). */
    animation-duration: 10s;
}
.line {
    background-color: black;
    width: 50%;
    height: 2px;
    position: absolute;
    left: 50%;
    top: 50%;
    /* The transform-origin property is used to set the point around which a CSS transformation is applied.
    For example, when performing a rotate, the transform-origin determines around which point the element is rotated. */
    transform-origin: 0 0;
}
.line:nth-of-type(2) {
    /*the transform property allows you to manipulate the shape of an element. In this case, using the rotate(60deg)
    value will rotate the element around its transform-origin point by 60 degrees clockwise.  */
    transform: rotate(60deg);
}
.line:nth-of-type(3) {
    transform: rotate(120deg);
}
.line:nth-of-type(4) {
    transform: rotate(180deg);
}
.line:nth-of-type(5) {
    transform: rotate(240deg);
}
.line:nth-of-type(6) {
    transform: rotate(300deg);
}
.cabin {
    background-color: mediumvioletred;
    width: 20%;
    height: 20%;
    position: absolute;
    border: 2px solid;
    transform-origin: 50% 0;
}
/* position the cabins around the wheel */
.cabin:nth-of-type(1) {
    right: -8.5%;
    top: 50%;
}
.cabin:nth-of-type(2) {
    right: 17%;
    top: 93.5%;
}
.cabin:nth-of-type(3) {
    right: 67%;
    top: 93.5%;
}
.cabin:nth-of-type(4) {
    left: -8.5%;
    top: 50%;
}
.cabin:nth-of-type(5) {
    left: 17%;
    top: 7%;
}
.cabin:nth-of-type(6) {
    right: 17%;
    top: 7%;
}
/*
The @keyframes at-rule is used to define the flow of a CSS animation. Within the @keyframes rule, you can create
selectors for specific points in the animation sequence, such as 0% or 25%, or use from and to to define the start and
end of the sequence.
@keyframes rules require a name to be assigned to them, which you use in other rules to reference. */
@keyframes wheel {
/* define how your animation should start */
    0% {
        transform: rotate(360deg);
    }
      100% {
            transform: rotate(360deg);
        }
}
